#include "cub3d.h"
#define INVALID_ARGS "\033[0;31mError\nInvalid Arguments\n\033[0m"
#define INVALID_FILE "\033[0;31mError\n Invalid File\n\033[0m"
#define POINT '.'
#define EXTENSION ".cub"
#define TRUE 1
#typedef struct s_parsing
{
    char **input_file;
    int read_bytes;
    int fd;
} t_parsing;  
void ft_error_msg(char *msg)
{
    write(STDERR_FILENO, msg, ft_strlen(msg));
    exit(TRUE);
}
int check_file(char *str)
{
      if(str && (str[0] == POINT || !ft_strnstr(str, EXTENSION, ft_strlen(EXTENSION))))
            ft_error_msg(INVALID_FILE);

}
void check_and_read_error(t_parsing *parse, char *str)
{
      if(!check_file(str))
            ft_error(INVALID_FILE);
}
int main(int ac, char **av)
{
    t_parsing parse;
    
    ft_memset(&parse, 0, sizeof(parse));
    if(ac != 2)
        ft_error_msg(INVALID_ARGS);
    check_and_read_error(&parse, av);

}
